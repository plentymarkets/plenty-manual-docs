name: CD

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [ ContentSourceUpdate, UIBundleUpdate ]
  workflow_dispatch:
  
concurrency:
  group: publish

jobs:
  build:
    if: ${{ github.event.label.name != 'skip-build' }}
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Checkout UI repo
        uses: actions/checkout@v2
        with:
          repository: plentymarkets/plenty-docs-ui
          path: plenty-docs-ui-repo

      - name: Move I18N files
        run: |
          mkdir ./lang/
          mv ${GITHUB_WORKSPACE}/plenty-docs-ui-repo/src/lang/en-gb.json ./lang/en-gb.json
          mv ${GITHUB_WORKSPACE}/plenty-docs-ui-repo/src/lang/de-de.json ./lang/de-de.json
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 12.x
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          check-latest: true

      - name: Build site
        run: |
          npm i -g @antora/cli@2.3 @antora/site-generator-default@2.3
          antora antora-playbook-de.yml --fetch --stacktrace
          antora antora-playbook-en.yml --fetch --stacktrace
          
      - name: Assemble site
        run: |
          # Move index to build directory
          mv index.html ./build/index.html
          mv 404.html ./build/404.html
          mv sitemap.xml ./build/sitemap.xml
          mv robots.txt ./build/robots.txt
          
      - name: Upload site as artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./build
          retention-days: 1

      - name: Upload site to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          SOURCE_DIR: './build'
          AWS_REGION: 'eu-central-1'
      
      - name: Invalidate CloudFront cache
        uses: awact/cloudfront-action@master
        env:
          SOURCE_PATH: '/*'
          AWS_REGION: 'eu-central-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DISTRIBUTION_ID: ${{ secrets.DISTRIBUTION_ID }}

  notification: 
    name: Google chat notification
    needs: build
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Google Chat Notification Failure
        if: ${{ needs.build.result == 'failure' }}
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: Knowledge Deploy
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_FAILURE }}
          status: ${{ needs.build.result }}
